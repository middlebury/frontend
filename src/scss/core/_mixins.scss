@mixin link-border() {
  border-bottom: 1px solid currentColor;
  text-decoration: none;

  &:hover {
    border-bottom-color: transparent;
    text-decoration: none;
  }
}

@mixin absolute($top: 0, $right: 0, $bottom: 0, $left: 0) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin section-title() {
  text-transform: uppercase;
  letter-spacing: 2.5px;
  font-weight: $font-weight-medium;
  font-family: $font-family-sans-serif;
  font-size: 14px;
  line-height: 20px;
}

@mixin break-words {
  word-break: break-word;
  hyphens: auto;
}

@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// https://github.com/twbs/bootstrap/blob/v4.1.3/scss/mixins/_breakpoints.scss
@function breakpoint-next(
  $name,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 0.02px, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// TODO: remove me and use BS v4 media-breakpoint-up mixin
@mixin media($breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    @content;
  }
}

@mixin absolute-fill {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

@mixin h0 {
  font-size: $typescale-7;
  font-weight: $font-weight-normal;
  line-height: $line-height-heading;

  @include media(md) {
    font-size: $typescale-8;
  }
}

@mixin h1 {
  font-size: $typescale-8;
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;

  @include media(md) {
    font-size: $typescale-9;
  }

  @include media(lg) {
    font-size: $typescale-10;
  }
}

@mixin h2 {
  font-size: typescale(6);
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;

  @include media(lg) {
    font-size: typescale(7);
  }
}

@mixin h3 {
  font-size: typescale(5);
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;
}

@mixin h4 {
  font-size: typescale(4);
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;
}

@mixin h5 {
  font-size: typescale(3);
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;
}

@mixin h6 {
  font-size: typescale(2);
  line-height: $line-height-heading;
  font-weight: $font-weight-normal;
}
